name: Build and test

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - develop
  schedule:
    # 03:00 every Saturday morning
    - cron: '0 3 * * 6'

jobs:

  linux:
    name: Build and test (Linux)
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
      CXX: g++-10
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get current time
      uses: srfrnk/current-time@v1.1.0
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Cache ccache data
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-tket-ccache-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-ccache-
    - name: apt update
      run: sudo apt update
    - name: Check doxygen
      if: github.event_name == 'pull_request'
      run: |
        sudo apt install -y doxygen graphviz
        cd bubble && doxygen
    - name: Install conan
      id: conan
      run: |
        pip install conan
        conan_cmd=/home/runner/.local/bin/conan
        ${conan_cmd} profile new tket --detect
        ${conan_cmd} profile update settings.compiler.libcxx=libstdc++11 tket
        ${conan_cmd} config set general.revisions_enabled=1
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: Install ninja and ccache
      run: sudo apt-get install ninja-build ccache
    - name: Build tket
      run: ${CONAN_CMD} create --profile=tket --build=missing recipes/tket
    - name: Install runtime test requirements
      run: |
        sudo apt-get install texlive texlive-latex-extra latexmk
        mkdir -p ~/texmf/tex/latex
        wget http://mirrors.ctan.org/graphics/pgf/contrib/quantikz/tikzlibraryquantikz.code.tex -P ~/texmf/tex/latex
    - name: Build and run tket tests
      run: ${CONAN_CMD} create --profile=tket recipes/tket-tests
    - name: Build and run tket proptests
      run: ${CONAN_CMD} create --profile=tket recipes/tket-proptests
    - name: Set up Python 3.7
      if: github.event_name == 'push'
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Build pytket (3.7)
      if: github.event_name == 'push'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.7)
      if: github.event_name == 'push'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Set up Python 3.8
      if: github.event_name == 'pull_request'
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build pytket (3.8)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test building docs
      if: github.event_name == 'pull_request'
      timeout-minutes: 20
      run: |
        pip install -r pytket/docs/requirements.txt
        ./.github/workflows/build-docs
    - name: Test pytket (3.8)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Set up Python 3.9
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules

  macos:
    name: Build and test (MacOS)
    runs-on: macos-11
    env:
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Check C++ code formatting
      if: github.event_name == 'pull_request'
      run: |
        brew install clang-format
        git ls-files "*.cpp" "*.hpp" | xargs clang-format -style=file --dry-run --Werror
    - name: Get current time
      uses: srfrnk/current-time@v1.1.0
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Cache ccache data
      uses: actions/cache@v2
      with:
        path: ~/Library/Caches/ccache
        key: ${{ runner.os }}-tket-ccache-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-ccache-
    - name: Install ninja and ccache
      run: brew install ninja ccache
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install conan
      id: conan
      run: |
        pip install conan
        conan profile new tket --detect --force
        conan config set general.revisions_enabled=1
        export CC=`which conan`
        echo "CONAN_CMD=${CC}" >> $GITHUB_ENV
    - name: Build tket
      run: conan create --profile=tket recipes/tket
    - name: Build and run tket tests
      run: conan create --profile=tket recipes/tket-tests
    - name: Build and run tket proptests
      run: conan create --profile=tket recipes/tket-proptests
    - name: Set up Python 3.7
      if: github.event_name == 'push'
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Build pytket (3.7)
      if: github.event_name == 'push'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.7)
      if: github.event_name == 'push'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Set up Python 3.8
      if: github.event_name == 'pull_request'
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build pytket (3.8)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.8)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Run mypy
      if: github.event_name == 'pull_request'
      run: |
        pip install -U mypy
        cd pytket
        mypy --config-file=mypy.ini --no-incremental -p pytket -p tests
    - name: Set up Python 3.9
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        cd pytket/tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules

  macos-m1:
    name: Build and test (MacOS M1)
    runs-on: [self-hosted, macos, M1]
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.pull_request.head.repo.full_name == github.repository
    defaults:
      run:
        shell: "/usr/bin/arch -arch arm64e /bin/bash {0}"
    env:
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up conan
      id: conan
      run: |
        conan profile new tket --detect --force
        conan config set general.revisions_enabled=1
        export CC=`which conan`
        echo "CONAN_CMD=${CC}" >> $GITHUB_ENV
    - name: Install boost
      run: conan install --profile=tket boost/1.77.0@ --build=missing -o boost:without_fiber=True -o boost:without_json=True -o boost:without_nowide=True
    - name: Build tket
      run: conan create --profile=tket recipes/tket -o boost:without_fiber=True -o boost:without_json=True -o boost:without_nowide=True
    - name: Build and run tket tests
      run: conan create --profile=tket recipes/tket-tests -o boost:without_fiber=True -o boost:without_json=True -o boost:without_nowide=True
    - name: Build and run tket proptests
      run: conan create --profile=tket recipes/tket-proptests -o boost:without_fiber=True -o boost:without_json=True -o boost:without_nowide=True
    - name: Build pytket (3.8)
      if: github.event_name == 'pull_request' || github.event_name == 'push'
      run: |
        eval "$(pyenv init -)"
        pyenv shell tket-3.8
        OPENBLAS="$(brew --prefix openblas)" pip install -U scipy
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.8)
      if: github.event_name == 'pull_request' || github.event_name == 'push'
      run: |
        eval "$(pyenv init -)"
        pyenv shell tket-3.8
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Build pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        eval "$(pyenv init -)"
        pyenv shell tket-3.9
        OPENBLAS="$(brew --prefix openblas)" pip install -U scipy
        cd pytket
        pip install -e . -v
    - name: Test pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        eval "$(pyenv init -)"
        pyenv shell tket-3.9
        cd pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules

  windows:
    name: Build and test (Windows)
    runs-on: windows-2019
    env:
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Hash bubble source
      id: hash_bubble_source
      run: |
        Function Get-FolderHash
        {
            param ($folder)
            $files = dir $folder -Recurse |? { -not $_.psiscontainer }
            $allBytes = new-object System.Collections.Generic.List[byte]
            foreach ($file in $files)
            {
                $allBytes.AddRange([System.IO.File]::ReadAllBytes($file.FullName))
                $allBytes.AddRange([System.Text.Encoding]::UTF8.GetBytes($file.Name))
            }
            $hasher = [System.Security.Cryptography.MD5]::Create()
            $ret = [string]::Join("",$($hasher.ComputeHash($allBytes.ToArray()) | %{"{0:x2}" -f $_}))
            return $ret
        }
        $bubble_hash = Get-FolderHash bubble
        echo "::set-output name=bubble_hash::${bubble_hash}"
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Install conan
      run: |
        pip install conan
        conan profile new tket --detect
        conan config set general.revisions_enabled=1
        $conan_cmd = (gcm conan).Path
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: Cache bubble build
      id: cache-bubble
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\.conan\data\tket
        key: ${{ runner.os }}-tket-bubble-${{ steps.hash_bubble_source.outputs.bubble_hash }}-11
    - name: Build tket
      if: steps.cache-bubble.outputs.cache-hit != 'true'
      run: conan create --profile=tket recipes/tket
    - name: Build and run tket tests
      run: conan create --profile=tket recipes/tket-tests
    - name: Build and run tket proptests
      run: conan create --profile=tket recipes/tket-proptests
    - name: Set up Python 3.7
      if: github.event_name == 'push'
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Build and test pytket (3.7)
      if: github.event_name == 'push'
      run: |
        cd pytket
        pip install -e . -v
        cd tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Set up Python 3.8
      if: github.event_name == 'pull_request'
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build and test pytket (3.8)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket
        pip install -e . -v
        cd tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Set up Python 3.9
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build and test pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        cd pytket
        pip install -e . -v
        cd tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
