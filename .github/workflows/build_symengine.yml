name: build symengine
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  changes:
    runs-on: ubuntu-20.04
    outputs:
      recipes_symengine: ${{ steps.filter.outputs.recipes_symengine }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          recipes_symengine:
            - 'recipes/symengine/**'
  linux:
    name: build symengine (linux)
    needs: changes
    if: needs.changes.outputs.recipes_symengine == 'true'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        build_type: ['Release', 'Debug']
        shared: ['True', 'False']
    env:
      CC: gcc-10
      CXX: g++-10
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
    - name: install conan
      run: pip install conan
    - name: create profile
      run: |
        conan profile new tket --detect
        conan profile update settings.compiler.libcxx=libstdc++11 tket
    - name: build symengine
      run: conan create --profile=tket -s build_type=${{ matrix.build_type }} -o symengine:shared=${{ matrix.shared }} recipes/symengine tket/stable
    - name: add remote
      run: conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan
    - name: authenticate to repository
      run: conan user -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN_1 }} -r tket-conan ${{ secrets.JFROG_ARTIFACTORY_USER_1 }}
    - name: get version
      run: |
        symengine_ver=$(conan inspect --raw version recipes/symengine/)
        echo "SYMENGINE_VER=${symengine_ver}" >> $GITHUB_ENV
    - name: upload package (dry run)
      if: github.event_name == 'pull_request'
      run: conan upload symengine/${SYMENGINE_VER}@tket/stable --all -r=tket-conan --skip-upload
    - name: upload package
      if: github.event_name == 'push'
      run: conan upload symengine/${SYMENGINE_VER}@tket/stable --all -r=tket-conan
  macos:
    name: build symengine (macos)
    needs: changes
    if: needs.changes.outputs.recipes_symengine == 'true'
    runs-on: macos-11
    strategy:
      matrix:
        build_type: ['Release', 'Debug']
        shared: ['True', 'False']
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: install conan
      run: pip install conan
    - name: create profile
      run: conan profile new tket --detect
    - name: install boost
      run: conan install --profile=tket -s build_type=${{ matrix.build_type }} boost/1.79.0@ --build=missing
    - name: build symengine
      run: conan create --profile=tket -s build_type=${{ matrix.build_type }} -o symengine:shared=${{ matrix.shared }} recipes/symengine tket/stable
    - name: add remote
      run: conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan
    - name: authenticate to repository
      run: conan user -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN_1 }} -r tket-conan ${{ secrets.JFROG_ARTIFACTORY_USER_1 }}
    - name: get version
      run: |
        symengine_ver=$(conan inspect --raw version recipes/symengine/)
        echo "SYMENGINE_VER=${symengine_ver}" >> $GITHUB_ENV
    - name: upload package (dry run)
      if: github.event_name == 'pull_request'
      run: conan upload symengine/${SYMENGINE_VER}@tket/stable --all -r=tket-conan --skip-upload
    - name: upload package
      if: github.event_name == 'push'
      run: conan upload symengine/${SYMENGINE_VER}@tket/stable --all -r=tket-conan
  macos-m1:
    name: build symengine (macos-m1)
    needs: changes
    if: needs.changes.outputs.recipes_symengine == 'true'
    runs-on: [self-hosted, macos, M1]
    strategy:
      matrix:
        build_type: ['Release', 'Debug']
        shared: ['True', 'False']
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
    - name: install conan
      run: pip install -U conan
    - name: create profile
      run: conan profile new tket --detect --force
    - name: build symengine
      run: conan create --profile=tket -s build_type=${{ matrix.build_type }} -o symengine:shared=${{ matrix.shared }} recipes/symengine tket/stable
    - name: add remote
      run: conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan --force
    - name: authenticate to repository
      run: conan user -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN_1 }} -r tket-conan ${{ secrets.JFROG_ARTIFACTORY_USER_1 }}
    - name: get version
      run: |
        symengine_ver=$(conan inspect --raw version recipes/symengine/)
        echo "SYMENGINE_VER=${symengine_ver}" >> $GITHUB_ENV
    - name: upload package (dry run)
      if: github.event_name == 'pull_request'
      run: conan upload symengine/${SYMENGINE_VER}@tket/stable --all -r=tket-conan --skip-upload
    - name: upload package
      if: github.event_name == 'push'
      run: conan upload symengine/${SYMENGINE_VER}@tket/stable --all -r=tket-conan
  windows:
    name: build symengine (windows)
    needs: changes
    if: needs.changes.outputs.recipes_symengine == 'true'
    runs-on: windows-2019
    strategy:
      matrix:
        build_type: ['Release', 'Debug']
        shared: ['True', 'False']
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
    - name: install conan
      run: pip install conan
    - name: create profile
      run: conan profile new tket --detect
    - name: normalize line endings in conanfile
      run: |
        $conanfile ='recipes/symengine/conanfile.py'
        $normalized_file = [IO.File]::ReadAllText($conanfile) -replace "`r`n", "`n"
        [IO.File]::WriteAllText($conanfile, $normalized_file)
    - name: build symengine
      run: conan create --profile=tket -s build_type=${{ matrix.build_type }} -o symengine:shared=${{ matrix.shared }} recipes/symengine tket/stable
    - name: add remote
      run: conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan
    - name: authenticate to repository
      run: conan user -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN_1 }} -r tket-conan ${{ secrets.JFROG_ARTIFACTORY_USER_1 }}
    - name: get version
      run: |
        $symengine_ver = conan inspect --raw version recipes/symengine/
        echo "SYMENGINE_VER=${symengine_ver}" >> $env:GITHUB_ENV
    - name: upload package (dry run)
      if: github.event_name == 'pull_request'
      run: conan upload symengine/${{ env.SYMENGINE_VER }}@tket/stable --all -r=tket-conan --skip-upload
    - name: upload package
      if: github.event_name == 'push'
      run: conan upload symengine/${{ env.SYMENGINE_VER }}@tket/stable --all -r=tket-conan
  manylinux:
    name: build symengine (manylinux)
    needs: changes
    if: needs.changes.outputs.recipes_symengine == 'true'
    runs-on: ubuntu-20.04
    env:
      UPLOAD_PACKAGE: "NO"
    steps:
    - uses: actions/checkout@v3
    - name: set up container
      run: |
        docker create --name linux_build -i -v /:/host quay.io/pypa/manylinux2014_x86_64:latest /bin/bash
        docker cp ./recipes/symengine linux_build:/
        docker cp ./.github/workflows/linuxbuildsymengine linux_build:/
    - name: determine whether to upload package
      if: github.event_name == 'push'
      run: echo "UPLOAD_PACKAGE=YES" >> ${GITHUB_ENV}
    - name: build symengine
      run: |
        docker start linux_build
        cat <<EOF > env-vars
        UPLOAD_PACKAGE=${UPLOAD_PACKAGE}
        JFROG_ARTIFACTORY_TOKEN_1=${{ secrets.JFROG_ARTIFACTORY_TOKEN_1 }}
        JFROG_ARTIFACTORY_USER_1=${{ secrets.JFROG_ARTIFACTORY_USER_1 }}
        EOF
        docker exec --env-file env-vars linux_build /bin/bash -c "/linuxbuildsymengine"
