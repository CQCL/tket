#!/usr/bin/env python3

# Copyright 2019-2023 Cambridge Quantum Computing
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Usage:
#
# compare-coverage <file> <file1>
#
# where each file contains three lines of text such as:
#
# lines: 87.5% (17090 out of 19537)
# functions: 100.0% (10 out of 10)
# branches: 46.4% (23147 out of 49885)
#
# Returns status 0 if `file1` is at least as good as `file` on the "lines" score
# and the "functions" score, otherwise returns status 1.

import sys


def extract_num_from_percent(word):
    assert word[-1] == "%"
    return float(word[:-1])


def get_percentages(summary):
    words = summary.split()
    assert words[0] == "lines:"
    assert words[6] == "functions:"
    assert words[12] == "branches:"
    return (
        extract_num_from_percent(words[1]),
        extract_num_from_percent(words[7]),
        extract_num_from_percent(words[13]),
    )


def compare(summary, summary1):
    print("Comparing coverage:")
    print()
    print("Old:")
    print(summary)
    print("New:")
    print(summary1)

    lpercent, fpercent, bpercent = get_percentages(summary)
    lpercent1, fpercent1, bpercent1 = get_percentages(summary1)

    if lpercent1 < lpercent:
        print("Percentage line coverage has decreased.")
        exit(1)
    if fpercent1 < fpercent:
        print("Percentage function coverage has decreased.")
        exit(1)
    if bpercent1 < bpercent:
        print("Percentage branch coverage has decreased.")
        exit(1)


if __name__ == "__main__":
    file, file1 = sys.argv[1:3]
    with open(file, "r") as f:
        summary = f.read()
    with open(file1) as f:
        summary1 = f.read()
    compare(summary, summary1)
