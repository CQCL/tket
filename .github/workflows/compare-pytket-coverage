#!/usr/bin/env python3

# Copyright 2022 Cambridge Quantum Computing
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Usage:
#
# compare-pytket-coverage old_cov_file new_cov_file
#
# where each file is a coverage xml file as generated by `pytest` with
# the `--cov-report=xml` option
#
# Returns status 0 if the coverage from `new_cov_file` is at least as good as
# `old_cov_file`. This tool will compare both the "lines" and "branch"
# scores. For comparing the "branch" scores, the `pytest` command should have
# included the `--cov-branch` option.

import sys
import xml.etree.ElementTree as ET
from os.path import exists


def validate(cov_file):
    if not exists(cov_file):
        sys.exit(f"{cov_file} file does not exist")
    try:
        ET.parse(cov_file)
    except Exception as e:
        sys.exit(f"Error found while parsing {cov_file}: {e}")


def get_rates(cov_root):
    """ Returns line and branch rates up to 2 decimal places """
    assert "line-rate" in cov_root.attrib
    assert "branch-rate" in cov_root.attrib
    line_rate = round(float(cov_root.attrib["line-rate"]), 2)
    branch_rate = round(float(cov_root.attrib["branch-rate"]), 2)
    return line_rate, branch_rate


def compare(old_cov_file, new_cov_file):
    old_cov = ET.parse(old_cov_file)
    old_cov_root = old_cov.getroot()
    new_cov = ET.parse(new_cov_file)
    new_cov_root = new_cov.getroot()

    old_line_rate, old_branch_rate = get_rates(old_cov_root)
    new_line_rate, new_branch_rate = get_rates(new_cov_root)

    print("Comparing pytket coverage:")
    print()
    print("Old:")
    print(f"Line coverage: {old_line_rate}")
    print(f"Branch coverage: {old_branch_rate}")
    print()
    print("New:")
    print(f"Line coverage: {new_line_rate}")
    print(f"Branch coverage: {new_branch_rate}")
    print()

    if new_line_rate < old_line_rate:
        sys.exit("Line coverage has decreased!")
    if new_branch_rate < old_branch_rate:
        sys.exit("Branch coverage has decreased!")


if __name__ == "__main__":
    old_cov_file, new_cov_file = sys.argv[1:3]
    validate(old_cov_file)
    validate(new_cov_file)
    compare(old_cov_file, new_cov_file)
