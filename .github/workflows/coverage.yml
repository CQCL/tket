name: Analyse tket C++ test coverage

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
  schedule:
    # 03:00 every Saturday morning
    - cron: '0 3 * * 6'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  changes:
    runs-on: ubuntu-22.04
    outputs:
      tket: ${{ steps.filter.outputs.tket }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2.11.0
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          tket:
            - 'tket/**'
            - '.github/workflows/coverage.yml'

  generate_coverage:
    name: Generate coverage report
    needs: changes
    if: needs.changes.outputs.tket == 'true' || github.event_name == 'schedule'
    runs-on: ubuntu-22.04
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
    - name: Get current time
      uses: josStorer/get-current-time@v2.0.1
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Use ccache
      uses: hendrikmuhs/ccache-action@v1.2.2
      with:
        key: ${{ github.job }}-${{ runner.os }}-ccache-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ github.job }}-${{ runner.os }}-ccache-
    - name: Install conan
      id: conan
      run: |
        pip install conan~=1.53
        conan_cmd=/home/runner/.local/bin/conan
        ${conan_cmd} profile new tket --detect
        ${conan_cmd} profile update settings.compiler.libcxx=libstdc++11 tket
        ${conan_cmd} profile update options.tklog:shared=True tket
        ${conan_cmd} profile update options.tket:shared=True tket
        ${conan_cmd} profile update settings.build_type=Debug tket
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: add remote
      run: |
        ${CONAN_CMD} remote clean
        ${CONAN_CMD} remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs
    - name: Build tket
      run: |
        ${CONAN_CMD} install recipes/tket tket/stable --install-folder=build/tket --profile=tket -o tket:profile_coverage=True
        ${CONAN_CMD} build recipes/tket --configure --build-folder=build/tket --source-folder=tket/src
        ${CONAN_CMD} build recipes/tket --build --build-folder=build/tket
        ${CONAN_CMD} export-pkg recipes/tket tket/stable -f --build-folder=build/tket --source-folder=tket/src
    - name: Build tket tests
      run: |
        ${CONAN_CMD} install recipes/tket-tests --install-folder=build/tket-tests --profile=tket -o tket-tests:with_coverage=True
        ${CONAN_CMD} build recipes/tket-tests --configure --build-folder=build/tket-tests --source-folder=tket/tests
        ${CONAN_CMD} build recipes/tket-tests --build --build-folder=build/tket-tests
        ${CONAN_CMD} package recipes/tket-tests/ --build-folder=build/tket-tests --package-folder build/tket-tests/package --source-folder=tket/tests
    - name: Install runtime test requirements
      if: github.event_name == 'schedule'
      run: |
        sudo apt-get update
        sudo apt-get install texlive texlive-latex-extra latexmk
        mkdir -p ~/texmf/tex/latex
        wget http://mirrors.ctan.org/graphics/pgf/contrib/quantikz/tikzlibraryquantikz.code.tex -P ~/texmf/tex/latex
    - name: Run tket tests
      if: github.event_name == 'pull_request' || github.event_name == 'push'
      working-directory: ./build/tket-tests/package/bin
      run: ./test_tket
    - name: Run full tket tests
      if: github.event_name == 'schedule'
      working-directory: ./build/tket-tests/package/bin
      run: ./test_tket "[long],~[long]"
    - name: Install gcovr
      run: pip install gcovr~=5.2
    - name: Build coverage report
      run: |
        mkdir test-coverage
        gcovr --print-summary --html --html-details -r ./tket/src/ --exclude-lines-by-pattern '.*\bTKET_ASSERT\(.*\);' --object-directory ${PWD}/build/tket/ -o test-coverage/index.html --decisions > test-coverage/summary.txt
        cat test-coverage/summary.txt
    - name: Upload artefact
      uses: actions/upload-artifact@v3
      with:
        name: test_coverage
        path: test-coverage/

  check_coverage:
    name: Check coverage
    needs: generate_coverage
    if: (github.event_name == 'pull_request' && needs.changes.outputs.tket == 'true') || github.event_name == 'schedule'
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Download artefact
      uses: actions/download-artifact@v3
      with:
        name: test_coverage
        path: test-coverage/
    - name: Compare with latest report from develop (short tests)
      if: github.event_name == 'pull_request'
      run: |
        wget https://cqcl.github.io/tket/tket/test-coverage-short/summary.txt
        ./.github/workflows/compare-coverage summary.txt test-coverage/summary.txt
    - name: Compare with latest report from develop (full suite)
      if: github.event_name == 'schedule'
      run: |
        wget https://cqcl.github.io/tket/tket/test-coverage/summary.txt
        ./.github/workflows/compare-coverage summary.txt test-coverage/summary.txt

  publish_coverage_short:
    name: Publish coverage (short tests)
    needs: generate_coverage
    concurrency: gh_pages
    if: github.event_name == 'push' && needs.changes.outputs.tket == 'true'
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        ref: gh-pages
    - name: Download artefact
      uses: actions/download-artifact@v3
      with:
        name: test_coverage
        path: test-coverage/
    - name: Configure git
      run: |
        git config --global user.email "tket-bot@cambridgequantum.com"
        git config --global user.name  "«$GITHUB_WORKFLOW» github action"
    - name: Remove old report
      run: git rm -r docs/tket/test-coverage-short
    - name: Add report to repository
      run: |
        mv test-coverage docs/tket/test-coverage-short
        git add -f docs/tket/test-coverage-short
        git commit --allow-empty -m "Add generated coverage report (short tests)."
    - name: Publish report
      run: git push origin gh-pages:gh-pages

  publish_coverage_full:
    name: Publish coverage (full suite)
    needs: check_coverage
    concurrency: gh_pages
    if: github.event_name == 'schedule'
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        ref: gh-pages
    - name: Download artefact
      uses: actions/download-artifact@v3
      with:
        name: test_coverage
        path: test-coverage/
    - name: Configure git
      run: |
        git config --global user.email "tket-bot@cambridgequantum.com"
        git config --global user.name  "«$GITHUB_WORKFLOW» github action"
    - name: Remove old report
      run: git rm -r docs/tket/test-coverage
    - name: Add report to repository
      run: |
        mv test-coverage docs/tket/test-coverage
        git add -f docs/tket/test-coverage
        git commit --allow-empty -m "Add generated coverage report (full suite)."
    - name: Publish report
      run: git push origin gh-pages:gh-pages
