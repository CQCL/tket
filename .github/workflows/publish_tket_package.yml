name: Publish tket package

on:
  push:
    branches:
      - 'package/**'

jobs:
  build_and_publish:
    name: build and publish tket
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'macos-11', 'windows-2019']
        build_type: ['Release', 'Debug']
        shared: ['True', 'False']
        exclude:
          - os: 'macos-11'
            build_type: 'Debug'
            shared: 'True'
    runs-on: ${{ matrix.os }}
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
    - name: normalize line endings in conanfile and src directory
      if: matrix.os == 'windows-2019'
      # This is necessary to ensure consistent revisions across platforms.
      # Conan's revision hash is composed of hashes all the exported files, so
      # we must normalize the line endings in these.
      run: |
        $conanfile ='recipes/tket/conanfile.py'
        $normalized_file = [IO.File]::ReadAllText($conanfile) -replace "`r`n", "`n"
        [IO.File]::WriteAllText($conanfile, $normalized_file)
        $src_files = Get-ChildItem "tket/src" -File -Recurse
        foreach ($f in $src_files) {
          $normalized_file = [IO.File]::ReadAllText($f) -replace "`r`n", "`n"
          [IO.File]::WriteAllText($f, $normalized_file)
        }
    - name: set compiler
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100
        sudo update-alternatives --set gcc /usr/bin/gcc-10
        sudo update-alternatives --set g++ /usr/bin/g++-10
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: install conan
      run: pip install conan
    - name: create profile
      run: conan profile new tket --detect
    - name: set libcxx
      if: matrix.os == 'ubuntu-20.04'
      run: conan profile update settings.compiler.libcxx=libstdc++11 tket
    - name: add remote
      run: conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan
    - name: build tket
      run: conan create --profile=tket -s build_type=${{ matrix.build_type }} -o tket:shared=${{ matrix.shared }} recipes/tket tket/stable --build=missing
    - name: authenticate to repository
      run: conan user -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN_1 }} -r tket-conan ${{ secrets.JFROG_ARTIFACTORY_USER_1 }}
    - name: get version
      if: matrix.os != 'windows-2019'
      run: |
        lib_ver=$(conan inspect --raw version recipes/tket/conanfile.py)
        echo "LIB_VER=${lib_ver}" >> $GITHUB_ENV
    - name: get version
      if: matrix.os == 'windows-2019'
      run: |
        $${{ matrix.lib }}_ver = conan inspect --raw version recipes/tket/conanfile.py
        echo "LIB_VER=${${{ matrix.lib }}_ver}" >> $env:GITHUB_ENV
    - name: upload package
      run: conan upload tket/${{ env.LIB_VER }}@tket/stable --all -r=tket-conan

  macos_m1:
    name: build and publish tket (MacOS M1)
    strategy:
      matrix:
        build_type: ['Release', 'Debug']
        shared: ['True', 'False']
        exclude:
          - build_type: 'Debug'
            shared: 'True'
    runs-on: [self-hosted, macos, M1]
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
    - name: install conan
      run: pip install conan
    - name: create profile
      run: conan profile new tket --detect --force
    - name: add remote
      run: conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan --force
    - name: build tket
      run: conan create --profile=tket -s build_type=${{ matrix.build_type }} -o tket:shared=${{ matrix.shared }} recipes/tket tket/stable --build=missing
    - name: authenticate to repository
      run: conan user -p ${{ secrets.JFROG_ARTIFACTORY_TOKEN_1 }} -r tket-conan ${{ secrets.JFROG_ARTIFACTORY_USER_1 }}
    - name: get version
      run: |
        lib_ver=$(conan inspect --raw version recipes/tket/conanfile.py)
        echo "LIB_VER=${lib_ver}" >> $GITHUB_ENV
    - name: upload package
      run: conan upload tket/${{ env.LIB_VER }}@tket/stable --all -r=tket-conan
