{"bits": [["a", [0]], ["a", [1]], ["a", [2]], ["a", [3]], ["a", [4]], ["a", [5]], ["a", [6]], ["a", [7]], ["a", [8]], ["a", [9]], ["a", [10]], ["a", [11]], ["a", [12]], ["a", [13]], ["a", [14]], ["b", [0]], ["b", [1]], ["b", [2]], ["b", [3]], ["b", [4]], ["b", [5]], ["b", [6]], ["b", [7]], ["b", [8]], ["b", [9]], ["b", [10]], ["b", [11]], ["b", [12]], ["b", [13]], ["b", [14]], ["c", [0]], ["c", [1]], ["c", [2]], ["c", [3]], ["c", [4]], ["c", [5]], ["c", [6]], ["c", [7]], ["c", [8]], ["c", [9]], ["c", [10]], ["c", [11]], ["c", [12]], ["c", [13]], ["c", [14]], ["d", [0]], ["d", [1]], ["d", [2]], ["d", [3]], ["d", [4]], ["d", [5]], ["d", [6]], ["d", [7]], ["d", [8]], ["d", [9]], ["d", [10]], ["d", [11]], ["d", [12]], ["d", [13]], ["d", [14]], ["e", [0]], ["e", [1]], ["e", [2]], ["e", [3]], ["e", [4]], ["e", [5]], ["e", [6]], ["e", [7]], ["e", [8]], ["e", [9]], ["e", [10]], ["e", [11]], ["e", [12]], ["e", [13]], ["e", [14]], ["tk_SCRATCH_BIT", [0]]], "commands": [{"args": [["c", [4]], ["c", [5]], ["c", [6]], ["c", [7]], ["c", [8]], ["tk_SCRATCH_BIT", [0]]], "op": {"expr": {"bit_posn": [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4]], "expr": {"args": [{"input": {"args": [{"input": {"term": {"type": "bit", "var": {"index": 0}}, "type": "var"}, "type": "term"}, {"input": {"args": [{"input": {"term": {"type": "bit", "var": {"index": 1}}, "type": "var"}, "type": "term"}, {"input": {"term": {"type": "bit", "var": {"index": 2}}, "type": "var"}, "type": "term"}], "op": "BitXor"}, "type": "expr"}], "op": "BitOr"}, "type": "expr"}, {"input": {"args": [{"input": {"term": {"type": "bit", "var": {"index": 3}}, "type": "var"}, "type": "term"}, {"input": {"term": {"type": "bit", "var": {"index": 4}}, "type": "var"}, "type": "term"}], "op": "BitAnd"}, "type": "expr"}], "op": "BitOr"}, "output_posn": [5], "reg_posn": []}, "type": "ClExpr"}}, {"args": [["q", [0]]], "op": {"type": "H"}}, {"args": [["a", [0]], ["a", [1]], ["a", [2]], ["a", [3]], ["a", [4]], ["a", [5]], ["a", [6]], ["a", [7]], ["a", [8]], ["a", [9]], ["a", [10]], ["a", [11]], ["a", [12]], ["a", [13]], ["a", [14]], ["b", [0]], ["b", [1]], ["b", [2]], ["b", [3]], ["b", [4]], ["b", [5]], ["b", [6]], ["b", [7]], ["b", [8]], ["b", [9]], ["b", [10]], ["b", [11]], ["b", [12]], ["b", [13]], ["b", [14]], ["d", [0]], ["d", [1]], ["d", [2]], ["d", [3]], ["d", [4]], ["d", [5]], ["d", [6]], ["d", [7]], ["d", [8]], ["d", [9]], ["d", [10]], ["d", [11]], ["d", [12]], ["d", [13]], ["d", [14]], ["c", [0]], ["c", [1]], ["c", [2]], ["c", [3]], ["c", [4]], ["c", [5]], ["c", [6]], ["c", [7]], ["c", [8]], ["c", [9]], ["c", [10]], ["c", [11]], ["c", [12]], ["c", [13]], ["c", [14]]], "op": {"type": "ClExpr", "expr": {"expr": {"op": "RegSub", "args": [{"type": "expr", "input": {"op": "RegAdd", "args": [{"type": "term", "input": {"type": "var", "term": {"type": "reg", "var": {"index": 0}}}}, {"type": "term", "input": {"type": "var", "term": {"type": "reg", "var": {"index": 1}}}}]}}, {"type": "term", "input": {"type": "var", "term": {"type": "reg", "var": {"index": 2}}}}]}, "bit_posn": [], "reg_posn": [[0, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [1, [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]], [2, [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]]], "output_posn": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]}}}, {"args": [["tk_SCRATCH_BIT", [0]], ["q", [0]]], "op": {"conditional": {"op": {"type": "H"}, "value": 1, "width": 1}, "type": "Conditional"}}, {"args": [["a", [0]], ["a", [1]], ["a", [2]], ["a", [3]], ["a", [4]], ["a", [5]], ["a", [6]], ["a", [7]], ["a", [8]], ["a", [9]], ["a", [10]], ["a", [11]], ["a", [12]], ["a", [13]], ["a", [14]], ["b", [0]], ["b", [1]], ["b", [2]], ["b", [3]], ["b", [4]], ["b", [5]], ["b", [6]], ["b", [7]], ["b", [8]], ["b", [9]], ["b", [10]], ["b", [11]], ["b", [12]], ["b", [13]], ["b", [14]], ["c", [0]], ["c", [1]], ["c", [2]], ["c", [3]], ["c", [4]], ["c", [5]], ["c", [6]], ["c", [7]], ["c", [8]], ["c", [9]], ["c", [10]], ["c", [11]], ["c", [12]], ["c", [13]], ["c", [14]], ["d", [0]], ["d", [1]], ["d", [2]], ["d", [3]], ["d", [4]], ["d", [5]], ["d", [6]], ["d", [7]], ["d", [8]], ["d", [9]], ["d", [10]], ["d", [11]], ["d", [12]], ["d", [13]], ["d", [14]], ["e", [0]], ["e", [1]], ["e", [2]], ["e", [3]], ["e", [4]], ["e", [5]], ["e", [6]], ["e", [7]], ["e", [8]], ["e", [9]], ["e", [10]], ["e", [11]], ["e", [12]], ["e", [13]], ["e", [14]]], "op": {"type": "ClExpr", "expr": {"expr": {"op": "RegMul", "args": [{"type": "expr", "input": {"op": "RegMul", "args": [{"type": "expr", "input": {"op": "RegMul", "args": [{"type": "term", "input": {"type": "var", "term": {"type": "reg", "var": {"index": 0}}}}, {"type": "term", "input": {"type": "var", "term": {"type": "reg", "var": {"index": 1}}}}]}}, {"type": "term", "input": {"type": "var", "term": {"type": "reg", "var": {"index": 2}}}}]}}, {"type": "term", "input": {"type": "var", "term": {"type": "reg", "var": {"index": 3}}}}]}, "bit_posn": [], "reg_posn": [[0, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], [1, [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]], [2, [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]], [3, [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]]], "output_posn": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]}}}], "created_qubits": [], "discarded_qubits": [], "implicit_permutation": [[["q", [0]], ["q", [0]]], [["q", [1]], ["q", [1]]]], "phase": "0.0", "qubits": [["q", [0]], ["q", [1]]]}