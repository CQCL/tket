#!/usr/bin/env python3

# Copyright 2019-2022 Cambridge Quantum Computing
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import subprocess

src = os.path.join(os.curdir, "src")
lsout = os.listdir(src)
comps = [
    f for f in lsout if not f.startswith(".") and os.path.isdir(os.path.join(src, f))
]


def generate_graph():
    deps = dict()
    for comp in comps:
        deps[comp] = set()
        srcdir = os.path.join(src, comp)
        for root, dirs, files in os.walk(srcdir):
            for f in files:
                if f.endswith(".cpp") or f.endswith(".hpp"):
                    fpath = os.path.join(root, f)
                    with open(fpath) as ff:
                        for fline in ff:
                            if "#include " in fline:
                                for comp1 in comps:
                                    if comp1 != comp:
                                        if comp1 + "/" in fline:
                                            deps[comp].add(comp1)
    with open("depgraph.dot", "w") as f:
        f.write("digraph tket {\n")
        for comp, depcomps in deps.items():
            for depcomp in depcomps:
                f.write("    %s -> %s;\n" % (comp, depcomp))
        f.write("}\n")
    subprocess.run(["dot", "-Tpng", "depgraph.dot", "-o", "depgraph.png"])


if __name__ == "__main__":
    generate_graph()
